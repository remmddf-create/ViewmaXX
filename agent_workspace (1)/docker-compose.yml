version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: viewmaxx
      POSTGRES_USER: viewmaxx_user
      POSTGRES_PASSWORD: viewmaxx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - viewmaxx-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - viewmaxx-network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - viewmaxx-network

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://viewmaxx_user:viewmaxx_password@postgres:5432/viewmaxx
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - viewmaxx-network

  # Frontend Next.js App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - viewmaxx-network

  # Video Processing Service
  video-processor:
    build:
      context: ./video-processor
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://viewmaxx_user:viewmaxx_password@postgres:5432/viewmaxx
    volumes:
      - ./uploads:/app/uploads
      - ./processed:/app/processed
    depends_on:
      - postgres
      - redis
    networks:
      - viewmaxx-network

  # Live Streaming Server
  streaming-server:
    build:
      context: ./streaming-server
      dockerfile: Dockerfile
    ports:
      - "1935:1935"  # RTMP
      - "8080:8080"  # HLS
    volumes:
      - ./streams:/app/streams
    networks:
      - viewmaxx-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
      - streaming-server
    networks:
      - viewmaxx-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  viewmaxx-network:
    driver: bridge
